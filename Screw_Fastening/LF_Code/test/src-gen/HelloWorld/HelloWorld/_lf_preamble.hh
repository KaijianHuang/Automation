/*
 * This file was autogenerated by the Lingua Franca Compiler.
 *
 * Source: platform:/resource/test/src/HelloWorld.lf
 */

#pragma once

#include <vector>
#include <array>

#include "reactor-cpp/reactor-cpp.hh"
// include the preambles from imported files 

#include <iostream>
#include <fstream>
#include <iomanip>
#include <string>
#include "apriltag.h"
#include "apriltag_pose.h"
#include "common/getopt.h"
#include "common/homography.h"
#include "tag16h5.h"
#include "tag25h9.h"
#include "tag36h11.h"
#include "tagCircle21h7.h"
#include "tagCircle49h12.h"
#include "tagCustom48h12.h"
#include "tagStandard41h12.h"
#include "tagStandard52h13.h"
#include "HalconCpp.h"
#include "HDevThread.h"
#include <opencv2/opencv.hpp>
#include <opencv2/highgui.hpp>
#include <opencv2/imgproc.hpp>
#include <opencv2/videoio.hpp>
#include <sstream>
#include <ur_rtde/rtde_control_interface.h>
#include <ur_rtde/rtde_receive_interface.h>

#include <thread>
#include <chrono>
#include <ctime>
#include <time.h>
#include <cmath>
#include <math.h>
using namespace ur_rtde;
using namespace std::chrono;
using namespace HalconCpp;
using namespace std;
using namespace cv;
const double desired_x = 1335.8;
const double desired_y = 834.5;
const float speed_x_Threshold = 0.05;
const float speed_y_Threshold = 0.05;
const double IntegralX_Threshold = 300000;
const double IntegralY_Threshold = 300000;

cv::Mat HImageToMat(HalconCpp::HObject &H_img);
